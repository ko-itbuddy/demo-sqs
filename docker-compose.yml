# ===================================================================
# SQS + MySQL Demo Docker Compose 설정  
# ===================================================================
# `docker-compose up -d` 한 번으로 모든 인프라 실행
# ===================================================================

services:
  # ===================================================================
  # LocalStack - AWS SQS 로컬 시뮬레이터
  # ===================================================================
  localstack:
    image: localstack/localstack:3.4
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=sqs
      - DEBUG=1
      - PERSISTENCE=0
      - LAMBDA_EXECUTOR=docker
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=ap-northeast-2
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  # ===================================================================
  # Producer Service Database 
  # ===================================================================
  producer-mysql:
    image: mysql:8.0
    container_name: producer-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=producer_db
      - MYSQL_USER=producer
      - MYSQL_PASSWORD=producer123
    volumes:
      - producer-mysql-data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # ===================================================================
  # Consumer Service Database
  # ===================================================================
  consumer-mysql:
    image: mysql:8.0
    container_name: consumer-mysql
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=consumer_db
      - MYSQL_USER=consumer
      - MYSQL_PASSWORD=consumer123
    volumes:
      - consumer-mysql-data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # ===================================================================
  # SQS 초기화 - 단순한 대기 후 큐 생성
  # ===================================================================
  sqs-init:
    image: amazon/aws-cli:2.15.30
    container_name: sqs-init
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=ap-northeast-2
      - AWS_ENDPOINT_URL=http://localstack:4566
    entrypoint: ["/bin/bash", "-c"]
    volumes:
      - "./scripts/init-sqs.sh:/scripts/init-sqs.sh"
    command:
      - |
        echo 'LocalStack 대기 중...'
        sleep 10
        chmod +x /scripts/init-sqs.sh && /scripts/init-sqs.sh

# ===================================================================
# 볼륨 설정 - 데이터 영속성
# ===================================================================
volumes:
  producer-mysql-data:
    driver: local
  consumer-mysql-data:
    driver: local

# ===================================================================
# 네트워크 설정
# ===================================================================
networks:
  default:
    name: microservice-network

# ===================================================================
# 간단한 사용법:
# 1. 인프라 실행: docker-compose up -d
# 2. 서비스 병렬 실행: ./gradlew :producer-service:bootRun :consumer-service:bootRun --parallel
# 3. 개별 실행: ./gradlew :producer-service:bootRun  (또는 :consumer-service:bootRun)
# 4. 시스템 종료: docker-compose down
# ===================================================================